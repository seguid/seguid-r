[{"path":"https://seguid-r.seguid.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Henrik Bengtsson. Author, maintainer, copyright holder.","code":""},{"path":"https://seguid-r.seguid.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pereira, Humberto, Paulo César Silva, Wayne M Davis, Louis Abraham, Gyorgy Babnigg, Henrik Bengtsson, Bjorn Johansson. SEGUID v2: Extending SEGUID Checksums Circular, Linear, Single- Double-Stranded Biological Sequences. bioRxiv (2024). https://doi.org/10.1101/2024.02.28.582384 Babnigg, György, Carol S Giometti. database unique protein sequence identifiers proteome studies. Proteomics (2006) 6 (16): 4514–22. https://doi.org/10.1002/pmic.200600032","code":"@Article{,   title = {{SEGUID v2}: Extending {SEGUID} checksums for circular, linear, single- and double-stranded biological sequences},   author = {Humberto Pereira and Paulo C{'e}sar Silva and Wayne M Davis and Louis Abraham and Gyorgy Babnigg and Henrik Bengtsson and Bjorn Johansson},   year = {2024},   publisher = {Cold Spring Harbor Laboratory},   journal = {bioRxiv},   doi = {10.1101/2024.02.28.582384}, } @Article{,   title = {A database of unique protein sequence identifiers for proteome studies},   author = {Gy{\"o}rgy Babnigg and Carol S. Giometti},   journal = {Proteomics},   publisher = {Wiley},   volume = {6},   number = {16},   pages = {4514--4522},   month = {aug},   year = {2006},   issn = {1615-9853, 1615-9861},   pmid = {16858731},   doi = {10.1002/pmic.200600032}, }"},{"path":"https://seguid-r.seguid.org/index.html","id":"seguid-v2-checksums-for-linear-circular-single--and-double-stranded-biological-sequences","dir":"","previous_headings":"","what":"Sequence Globally Unique Identifier (SEGUID) Checksums","title":"Sequence Globally Unique Identifier (SEGUID) Checksums","text":"R package, seguid, implements SEGUID v2 together original SEGUID algorithm.","code":""},{"path":[]},{"path":"https://seguid-r.seguid.org/index.html","id":"single-stranded-dna","dir":"","previous_headings":"Examples","what":"Single-stranded DNA","title":"Sequence Globally Unique Identifier (SEGUID) Checksums","text":"","code":"> library(seguid)  ## Linear single-stranded DNA > lsseguid(\"TATGCCAA\") [1] \"lsseguid=EevrucUNYjqlsxrTEK8JJxPYllk\"  ## Linear single-stranded DNA > lsseguid(\"AATATGCC\") [1] \"lsseguid=XsJzXMxgv7sbpqIzFH9dgrHUpWw\"  ## Circular single-stranded DNA > csseguid(\"TATGCCAA\") [1] \"csseguid=XsJzXMxgv7sbpqIzFH9dgrHUpWw\"  ## Same rotating two basepairs > csseguid(\"GCCAATAT\") [1] \"csseguid=XsJzXMxgv7sbpqIzFH9dgrHUpWw\""},{"path":"https://seguid-r.seguid.org/index.html","id":"double-stranded-dna","dir":"","previous_headings":"Examples","what":"Double-stranded DNA","title":"Sequence Globally Unique Identifier (SEGUID) Checksums","text":"","code":"> library(seguid)  ## Linear double-stranded DNA > ldseguid(\"AATATGCC\", \"GGCATATT\") [1] \"cdseguid=dUxN7YQyVInv3oDcvz8ByupL44A\"  ## Same swapping Watson and Crick  > ldseguid(\"GGCATATT\", \"AATATGCC\") [1] \"cdseguid=dUxN7YQyVInv3oDcvz8ByupL44A\"  ## Circular double-stranded DNA > cdseguid(\"TATGCCAA\", \"TTGGCATA\") [1] \"cdseguid=dUxN7YQyVInv3oDcvz8ByupL44A\"  ## Same swapping Watson and Crick  > cdseguid(\"TTGGCATA\", \"TATGCCAA\") [1] \"cdseguid=dUxN7YQyVInv3oDcvz8ByupL44A\"  ## Same rotating two basepairs (= minimal rotation by Watson) > cdseguid(\"AATATGCC\", \"GGCATATT\") [1] \"cdseguid=dUxN7YQyVInv3oDcvz8ByupL44A\""},{"path":"https://seguid-r.seguid.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Sequence Globally Unique Identifier (SEGUID) Checksums","text":"seguid package available CRAN can installed :","code":"install.packages(\"seguid\")"},{"path":"https://seguid-r.seguid.org/reference/seguid.html","id":null,"dir":"Reference","previous_headings":"","what":"SEGUID checksums for linear, circular, single- and double-stranded sequences — seguid","title":"SEGUID checksums for linear, circular, single- and double-stranded sequences — seguid","text":"SEGUID checksums linear, circular, single- double-stranded sequences","code":""},{"path":"https://seguid-r.seguid.org/reference/seguid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SEGUID checksums for linear, circular, single- and double-stranded sequences — seguid","text":"","code":"seguid(seq, alphabet = \"{DNA}\", form = c(\"long\", \"short\", \"both\"))  lsseguid(seq, alphabet = \"{DNA}\", form = c(\"long\", \"short\", \"both\"))  csseguid(seq, alphabet = \"{DNA}\", form = c(\"long\", \"short\", \"both\"))  ldseguid(watson, crick, alphabet = \"{DNA}\", form = c(\"long\", \"short\", \"both\"))  cdseguid(watson, crick, alphabet = \"{DNA}\", form = c(\"long\", \"short\", \"both\"))"},{"path":"https://seguid-r.seguid.org/reference/seguid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SEGUID checksums for linear, circular, single- and double-stranded sequences — seguid","text":"seq (character string) sequence checksum calculated.  sequence may comprise symbols alphabet specified alphabet argument. alphabet (character string) type sequence used. \"{DNA}\" (default), input DNA sequence. \"{RNA}\", input RNA sequence. \"{protein}\", input amino-acid sequence. \"{DNA-extended}\" \"{RNA-extended}\", input DNA RNA sequence specified extended set symbols, including \"{protein-extended}\", input amino-acid sequence extended set symbols, including IUPAC symbols (4). custom alphabet may also used. non-complementary alphabet specified comma-separated set single symbols, e.g. \"X,Y,Z\". complementary alphabet specified comma-separated set paired symbols, e.g. \",CG\". also possible extend pre-defined alphabet, e.g. \"{DNA},XY\". form (character string) checksum presented. \"long\" (default), full-length checksum outputted. \"short\", short, six-digit checksum outputted. \"\", short long checksums outputted. watson, crick (character strings) Two reverse-complementary DNA sequences. sequences specified 5'--3' direction.","code":""},{"path":"https://seguid-r.seguid.org/reference/seguid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SEGUID checksums for linear, circular, single- and double-stranded sequences — seguid","text":"SEGUID functions return single character string, form either \"long\" \"short\". form \"\", character vector length two return, first component holds \"short\" checksum second \"long\" checksum. long checksum, without prefix, string 27 characters. short checksum, without prefix, first six characters long checksum. checksums prefixed label indicating SEGUID method used. Except seguid(), uses base64 encoding, functions produce checksums using base64url encoding (\"Base 64 Encoding URL Filename Safe Alphabet\"). seguid() calculates SEGUID v1 checksum linear, single-stranded sequence. lsseguid() calculates SEGUID v2 checksum linear, single-stranded sequence. csseguid() calculates SEGUID v2 checksum circular, single-stranded sequence. ldseguid() calculates SEGUID v2 checksum linear, double-stranded sequence. cdseguid() calculates SEGUID v2 checksum circular, double-stranded sequence.","code":""},{"path":"https://seguid-r.seguid.org/reference/seguid.html","id":"base-and-base-url-encodings","dir":"Reference","previous_headings":"","what":"Base64 and Base64url encodings","title":"SEGUID checksums for linear, circular, single- and double-stranded sequences — seguid","text":"base64url encoding base64 encoding non-URL-safe characters substituted URL-safe ones. Specifically, plus symbol (+) replaced minus symbol (-), forward slash (/) replaced underscore symbol (_). Base64 checksum, used original SEGUID checksum, guaranteed comprise symbols can safely used -Uniform Resource Locator (URL). Specifically, may consist forward slashes (/) plus symbols (+), characters carry special meaning URL. reason, Base64 checksum safely used file directory name, may forward slash. checksum returned always 27-character long. representation always end padding character (=) length multiple four character. relax requirement, dropping padding character.","code":""},{"path":"https://seguid-r.seguid.org/reference/seguid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SEGUID checksums for linear, circular, single- and double-stranded sequences — seguid","text":"Babnigg, G., Giometti, CS. database unique protein sequence identifiers proteome studies. Proteomics. 2006 Aug;6(16):4514-22. doi:10.1002/pmic.200600032 . Josefsson, S., Base16, Base32, Base64 Data Encodings, RFC 4648, doi:10.17487/RFC4648 , October 2006, https://www.rfc-editor.org/info/rfc4648. Wikpedia article 'Nucleic acid notation', February 2024. https://en.wikipedia.org/wiki/Nucleic_acid_notation. Wikpedia article 'Nucleic acid notation', February 2024, https://en.wikipedia.org/wiki/Amino_acid. Wikipedia article 'SHA-1' (Secure Hash Algorithm 1), December 2023. https://en.wikipedia.org/wiki/SHA-1.","code":""},{"path":"https://seguid-r.seguid.org/reference/seguid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SEGUID checksums for linear, circular, single- and double-stranded sequences — seguid","text":"","code":"## SEGUID v1 on linear single-stranded DNA seguid(\"GATTACA\") #> [1] \"seguid=tp2jzeCM2e3W4yxtrrx09CMKa/8\" #> seguid=tp2jzeCM2e3W4yxtrrx09CMKa/8  ## SEGUID v2 on linear single-stranded DNA lsseguid(\"GATTACA\") #> [1] \"lsseguid=tp2jzeCM2e3W4yxtrrx09CMKa_8\" #> lsseguid=tp2jzeCM2e3W4yxtrrx09CMKa_8  ## SEGUID v2 on cicular single-stranded DNA ## GATTACA = ATTACAG = ... = AGATTAC csseguid(\"GATTACA\") #> [1] \"csseguid=mtrvbtuwr6_MoBxvtm4BEpv-jKQ\" #> csseguid=mtrvbtuwr6_MoBxvtm4BEpv-jKQ  ## SEGUID v2 on blunt, linear double-stranded DNA ##   GATTACA ##   CTAATGT ldseguid(\"GATTACA\", \"TGTAATC\") #> [1] \"ldseguid=zDq4dp6G3AIsldhPDDL8S5A0BKk\" #> ldseguid=AcRsEcNFrui5wCxI7xxo6wnDYPY  ## SEGUID v2 on staggered, linear double-stranded DNA ##   -ATTACA ##   CTAAT-- ldseguid(\"-ATTACA\", \"--TAATC\") #> [1] \"ldseguid=kkTcyGa7Z4DmjB49IzmJ2yMXeIQ\" #> ldseguid=98Klwxd3ZQPGHqnH3BheIuZVHQQ  ## SEGUID v2 on circular double-stranded DNA ## GATTACA = ATTACAG = ... = AGATTAC ## CTAATGT = TAATGTC = ... = TCTAATG cdseguid(\"GATTACA\", \"TGTAATC\") #> [1] \"cdseguid=z7GBDOjQuqwVpDiiC_CEJkmOKZo\" #> cdseguid=zCuq031K3_-40pArbl-Y4N9RLnA  ## SEGUID v2 on linear single-stranded expanded ## epigenetic sequence (Viner et al., 2024) viner_DNA <- \"{DNA},m1,h2,f3,c4\" lsseguid(\"AmT2C\", alphabet = viner_DNA) #> [1] \"lsseguid=MW4Rh3lGY2mhwteaSKh1-Kn2fGA\" #> lsseguid=MW4Rh3lGY2mhwteaSKh1-Kn2fGA  ## SEGUID v2 on linear double-stranded expanded ## epigenetic sequence (Viner et al., 2024) ldseguid(\"AmT2C\", \"GhA1T\", alphabet = viner_DNA) #> [1] \"ldseguid=bFZedILTms4ORUi3SSMfU0FUl7Q\" #> ldseguid=rsPDjP4SWr3-ploCeXTdTA80u0Y"},{"path":[]},{"path":"https://seguid-r.seguid.org/news/index.html","id":"significant-changes-development-version","dir":"Changelog","previous_headings":"","what":"Significant Changes","title":"Version (development version)","text":"Add citation SEGUID v2 manuscript bioRxiv, cf. citation(package = \"seguid\").","code":""},{"path":"https://seguid-r.seguid.org/news/index.html","id":"version-010","dir":"Changelog","previous_headings":"","what":"Version 0.1.0","title":"Version 0.1.0","text":"CRAN release: 2024-03-04","code":""},{"path":"https://seguid-r.seguid.org/news/index.html","id":"significant-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Significant Changes","title":"Version 0.1.0","text":"initial release package.","code":""}]
